


ARM Macro Assembler    Page 1 


    1 00000000         ; ce programme est pour l'assembleur RealView (Keil)
    2 00000000                 thumb
    3 00000000                 area             moncode, code, readonly
    4 00000000                 export           Partie
    5 00000000                 import           TabCos      ; créé dans Trigo.a
                                                            sm
    6 00000000                 import           TabSin      ; créé dans Trigo.a
                                                            sm
    7 00000000                 import           LeSignal
    8 00000000                 import           LeSignaltest
    9 00000000                 export           M2k
   10 00000000         
   11 00000000         
   12 00000000         Partie  proc
   13 00000000         
   14 00000000         ;argument dans R0, R1, R2
   15 00000000         ; R0= @ de LeSignal
   16 00000000         ; R1= k
   17 00000000         ; R2= @ table cos ou sin 
   18 00000000         
   19 00000000 B4F0            PUSH             {R4-R7}     ;push R4,R5,R6,R7
   20 00000002 F04F 0300       MOV              R3, #0      ; variable de parco
                                                            urs i 
   21 00000006 F04F 0700       MOV              R7, #0
   22 0000000A         
   23 0000000A         
   24 0000000A         Boucle
   25 0000000A FB03 F401       MUL              R4, R3, R1  ; calcul de ik dans
                                                             R4, entier non sig
                                                            né 32bits
   26 0000000E F004 043F       AND              R4, #0x0000003f ; ik modulo 64,
                                                             entier non signé 3
                                                            2bits
   27 00000012         ;LSL R4, #1 ; ik*2 car on travaille sur 16bits et non à 
                       l'octet voir alignement données cours ASM
   28 00000012 F932 5014       ldrsh            R5, [R2, R4, lsl #1] ; s: signé
                                                             h: sur 16 bits et 
                                                            r2,r5 car on se dép
                                                            lace de base + R4,
   29 00000016         ;format 1.15
   30 00000016         ;LSL R3, #1 ; i*2 car on travaille sur 16bits et non à l
                       'octet voir alignement données cours ASM
   31 00000016 F930 6013       ldrsh            R6, [R0, R3, lsl #1] ; valeur d
                                                            u signal en 4.12
   32 0000001A FB06 F605       MUL              R6, R5      ; format 1+4.15+12=
                                                            5.27
   33 0000001E 4437            ADD              R7, R6
   34 00000020         ;LSR R3, #1 ; i/2 pour reprendre l'itération normale
   35 00000020 F103 0301       ADD              R3, #1      ; incrémentation de
                                                             i
   36 00000024 2B40            CMP              R3, #64     ; test de boucle wh
                                                            ile i<64
   37 00000026 D1F0            BNE              Boucle
   38 00000028         
   39 00000028 4638            MOV              R0, R7
   40 0000002A         
   41 0000002A BCF0            POP              {R4-R7}
   42 0000002C         
   43 0000002C 4770            BX               lr



ARM Macro Assembler    Page 2 


   44 0000002E                 endp
   45 0000002E         
   46 0000002E         M2k     proc
   47 0000002E         
   48 0000002E         ;argument dans r0, r1
   49 0000002E         ;r0= @ du signal
   50 0000002E         ;r1= k
   51 0000002E B500            PUSH             {LR}
   52 00000030 B470            PUSH             {R4,R5,R6}
   53 00000032 4604            MOV              R4, R0
   54 00000034 4A06            LDR              R2 ,=TabCos
   55 00000036 F7FF FFFE       bl               Partie      ;appel de Partie av
                                                            ec Tabcos
   56 0000003A FB80 5600       SMULL            R5, R6, R0, R0 ;RegistreFortPoi
                                                            ds R5, RegistreFaib
                                                            lePoids R6, reçoive
                                                            nt R0*R0
   57 0000003E 4620            MOV              R0, R4
   58 00000040 4A04            LDR              R2 ,=TabSin
   59 00000042 F7FF FFFE       bl               Partie      ;appel de Partie av
                                                            ec TabSin
   60 00000046 FB80 0100       SMULL            R0, R1, R0, R0 ;RegistreFortPoi
                                                            ds R0, RegistreFaib
                                                            lePoids R1, reçoive
                                                            nt R0*R0
   61 0000004A 4428            ADD              R0, R5      ;FortPoids(Reel)^2+
                                                            FortPoids(Imaginair
                                                            e)^2 format: 10.22
   62 0000004C         
   63 0000004C         
   64 0000004C BC70            POP{R4-R6}
   65 0000004E         
   66 0000004E BD00            POP              {PC}
   67 00000050         
   68 00000050                 endp
   69 00000050         
   70 00000050                 end
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=etape2_2
.d -oetape2_2.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\AR
M\Inc\ST\STM32F10x --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" 
--list=etape2_2.lst etape2_2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Boucle 0000000A

Symbol: Boucle
   Definitions
      At line 24 in file etape2_2.s
   Uses
      At line 37 in file etape2_2.s
Comment: Boucle used once
M2k 0000002E

Symbol: M2k
   Definitions
      At line 46 in file etape2_2.s
   Uses
      At line 9 in file etape2_2.s
Comment: M2k used once
Partie 00000000

Symbol: Partie
   Definitions
      At line 12 in file etape2_2.s
   Uses
      At line 4 in file etape2_2.s
      At line 55 in file etape2_2.s
      At line 59 in file etape2_2.s

moncode 00000000

Symbol: moncode
   Definitions
      At line 3 in file etape2_2.s
   Uses
      None
Comment: moncode unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LeSignal 00000000

Symbol: LeSignal
   Definitions
      At line 7 in file etape2_2.s
   Uses
      None
Comment: LeSignal unused
LeSignaltest 00000000

Symbol: LeSignaltest
   Definitions
      At line 8 in file etape2_2.s
   Uses
      None
Comment: LeSignaltest unused
TabCos 00000000

Symbol: TabCos
   Definitions
      At line 5 in file etape2_2.s
   Uses
      At line 54 in file etape2_2.s
Comment: TabCos used once
TabSin 00000000

Symbol: TabSin
   Definitions
      At line 6 in file etape2_2.s
   Uses
      At line 58 in file etape2_2.s
Comment: TabSin used once
4 symbols
342 symbols in table
